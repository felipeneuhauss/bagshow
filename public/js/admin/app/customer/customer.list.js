// Generated by CoffeeScript 1.6.3
(function() {
  var CustomerController,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  CustomerController = (function(_super) {
    __extends(CustomerController, _super);

    function CustomerController($scope) {
      var _this;
      this.setScope($scope);
      this.loadModel();
      this.startEvents();
      _this = this;
      _this.scope.list = function() {
        var query;
        query = new Kinvey.Query();
        query.equalTo('inactivatedAt', '').or().equalTo('inactivatedAt', null);
        return Kinvey.DataStore.find('Customers', query, {
          relations: _this.relationsList,
          success: function(list) {
            return _this.scope.$apply(function() {
              return _this.scope['customerList'] = _this.prepareDataToList(list);
            });
          }
        });
      };
      _this.scope.list();
      this.scope["delete"] = function(entity) {
        if (confirm("Deseja remover o registro?")) {
          _this.model["delete"](entity._id);
          return _this.scope.list();
        }
      };
    }

    CustomerController.prototype.loadModel = function() {
      var idElement;
      idElement = null;
      if (this.form) {
        idElement = this.form.find('input[name="id"]').val();
      }
      this.model = new Customer({
        successMessage: 'Cliente cadastrado com sucesso',
        removeMessage: 'Cliente removido com sucesso',
        id: idElement,
        collectionName: 'Customers',
        view: this
      });
      return this;
    };

    CustomerController.prototype.startEvents = function() {
      var testAPI, _this;
      _this = this;
      _this.scope.friends = [];
      window.fbAsyncInit = function() {
        FB.init({
          appId: "502484363179735",
          channelUrl: "//www.kinvey-project.dev/channel.html",
          status: true,
          cookie: true,
          xfbml: true
        });
        return FB.Event.subscribe("auth.authResponseChange", function(response) {
          console.log(response.status);
          if (response.status === "connected") {
            $("#importFriendsButton").show();
            return testAPI();
          } else if (response.status === "not_authorized") {
            FB.login();
            return $("#importFriendsButton").hide();
          } else {
            FB.login();
            return $("#importFriendsButton").hide();
          }
        });
      };
      (function(d) {
        var id, js, ref;
        js = void 0;
        id = "facebook-jssdk";
        ref = d.getElementsByTagName("script")[0];
        if (d.getElementById(id)) {
          return;
        }
        js = d.createElement("script");
        js.id = id;
        js.async = true;
        js.src = "//connect.facebook.net/en_US/all.js";
        return ref.parentNode.insertBefore(js, ref);
      })(document);
      testAPI = function() {
        console.log("Welcome!  Fetching your information.... ");
        return FB.api("/me", function(response) {});
      };
      _this.scope.showImportFriendsFromFacebook = function() {
        statusMessage('info', 'Aguarde, carregando amigos do face');
        return FB.api("/me/friends", function(response) {
          return _this.scope.$apply(function() {
            _this.scope.friends = response.data;
            return $('#importFacebookFriendsModal').modal('show');
          });
        });
      };
      return _this.scope.completeImport = function() {
        var friend, friends, query, _i, _len;
        friends = underscore.where(_this.scope.friends, {
          checked: true
        });
        for (_i = 0, _len = friends.length; _i < _len; _i++) {
          friend = friends[_i];
          query = new Kinvey.Query;
          query.equalTo('facebookId', friend.id);
          Kinvey.DataStore.find('Customers', query, {
            success: function(list) {
              var customer;
              if (list.length === 0) {
                customer = {
                  name: friend.name,
                  facebookId: friend.id,
                  imageURL: "https://graph.facebook.com/" + friend.id + "/picture"
                };
                return Kinvey.DataStore.save('Customers', customer, {
                  success: function(customer) {
                    return _this.scope.$apply(function() {
                      return _this.scope.customerList.push(customer);
                    });
                  }
                });
              }
            }
          });
        }
        return $('#importFacebookFriendsModal').modal('hide');
      };
    };

    return CustomerController;

  })(AngularView);

  angularApp.controller('CustomerController', CustomerController);

}).call(this);
