// Generated by CoffeeScript 1.6.3
var ReportCustomer, ReportProduct, ReportSale;

ReportSale = (function() {
  function ReportSale(reportSaleList, cycleId, customerId) {
    var _this = this;
    this.reportSaleList = reportSaleList;
    this.cycleId = cycleId;
    this.customerId = customerId;
    this.cycleId = this.cycleId != null ? this.cycleId : $('#cycle-filter').val();
    this.customerId = this.customerId != null ? this.customerId : $('#customer-filter').val();
    Kinvey.User.me({
      success: function(user) {
        var currentDate, queryRegionalCycle;
        if (user.regional != null) {
          queryRegionalCycle = new Kinvey.Query();
          if (_this.cycleId === null || _this.cycleId === '') {
            currentDate = moment().format('YYYY-MM-DDTHH:mm:ss.SSS') + 'Z';
            queryRegionalCycle.greaterThanOrEqualTo('endsIn', currentDate).lessThanOrEqualTo('startsIn', currentDate);
            queryRegionalCycle.and().equalTo('regional._id', user.regional._id);
          } else {
            queryRegionalCycle.equalTo('cycle._id', _this.cycleId).and().equalTo('regional._id', user.regional._id);
          }
          return Kinvey.DataStore.find('RegionalCycles', queryRegionalCycle, {
            success: function(list) {
              _this.regionalCycle = list[0];
              if ((_this.regionalCycle != null) && _this.regionalCycle !== void 0) {
                _this.billingSaleGross(_this.regionalCycle, _this.customerId);
                _this.billingSaleNet(_this.regionalCycle, _this.customerId);
                _this.soldProductsQuantity(_this.regionalCycle, _this.customerId);
                _this.mediumTicket(_this.regionalCycle, _this.customerId);
                return _this.installmentToReceive(_this.regionalCycle, _this.customerId);
              }
            }
          });
        }
      }
    });
  }

  ReportSale.prototype.installmentToReceive = function(regionalCycle, customerId) {
    var group, querySale;
    querySale = new Kinvey.Query;
    querySale.equalTo('regionalCycle._id', regionalCycle._id);
    if ((customerId != null) && customerId !== '') {
      querySale = querySale.and().equalTo('customer._id', this.customerId);
    }
    querySale = querySale.and().equalTo('saleStatus._id', window.INSTALMENT_ID);
    group = Kinvey.Group.sum('gross');
    group.query(querySale);
    return Kinvey.DataStore.group('Sales', group, {
      success: function(result) {
        if (result.length > 0) {
          return $('#installmentToReceive').html(accounting.formatMoney(result[0].result, "R$", 2, ".", ","));
        } else {
          return $('#installmentToReceive').html(accounting.formatMoney(0, "R$", 2, ".", ","));
        }
      }
    });
  };

  ReportSale.prototype.mediumTicket = function(regionalCycle, customerId) {
    var group, querySale;
    querySale = new Kinvey.Query;
    querySale.equalTo('regionalCycle._id', regionalCycle._id);
    if ((customerId != null) && customerId !== '') {
      querySale = querySale.and().equalTo('customer._id', this.customerId);
    }
    group = Kinvey.Group.sum('gross');
    group.query(querySale);
    return Kinvey.DataStore.group('Sales', group, {
      success: function(result) {
        var gross;
        if (result.length > 0) {
          gross = result[0].result;
          group = Kinvey.Group.sum('quantity');
          group.query(querySale);
          return Kinvey.DataStore.group('Sales', group, {
            success: function(result) {
              var qtd;
              qtd = result[0].result;
              if (result.length > 0) {
                return $('#mediumTicket').html(accounting.formatMoney(parseFloat(gross) / parseInt(qtd), "R$", 2, ".", ","));
              } else {
                return $('#mediumTicket').html(accounting.formatMoney(0, "R$", 2, ".", ","));
              }
            }
          });
        }
      }
    });
  };

  ReportSale.prototype.billingSaleGross = function(regionalCycle, customerId) {
    var group, querySale;
    querySale = new Kinvey.Query;
    querySale.equalTo('regionalCycle._id', regionalCycle._id);
    if ((customerId != null) && customerId !== '') {
      querySale = querySale.and().equalTo('customer._id', this.customerId);
    }
    group = Kinvey.Group.sum('gross');
    group.query(querySale);
    return Kinvey.DataStore.group('Sales', group, {
      success: function(result) {
        if (result.length > 0) {
          $('#billingTotalSaleGross').html(accounting.formatMoney(result[0].result, "R$", 2, ".", ","));
          return $('.total-sold').html(accounting.formatMoney(result[0].result, "R$", 2, ".", ","));
        } else {
          $('#billingTotalSaleGross').html(accounting.formatMoney(0, "R$", 2, ".", ","));
          return $('.total-sold').html(accounting.formatMoney(0, "R$", 2, ".", ","));
        }
      }
    });
  };

  ReportSale.prototype.billingSaleNet = function(regionalCycle, customerId) {
    var group, querySale;
    querySale = new Kinvey.Query;
    querySale.equalTo('regionalCycle._id', regionalCycle._id);
    if ((customerId != null) && customerId !== '') {
      querySale = querySale.and().equalTo('customer._id', this.customerId);
    }
    group = Kinvey.Group.sum('net');
    group.query(querySale);
    return Kinvey.DataStore.group('Sales', group, {
      success: function(result) {
        if (result.length > 0) {
          return $('#billingTotalSaleNet').html(accounting.formatMoney(result[0].result, "R$", 2, ".", ","));
        } else {
          return $('#billingTotalSaleNet').html(accounting.formatMoney(0, "R$", 2, ".", ","));
        }
      }
    });
  };

  ReportSale.prototype.soldProductsQuantity = function(regionalCycle, customerId) {
    var group, querySale;
    querySale = new Kinvey.Query;
    querySale.equalTo('regionalCycle._id', regionalCycle._id);
    if ((customerId != null) && customerId !== '') {
      querySale = querySale.and().equalTo('customer._id', this.customerId);
    }
    group = Kinvey.Group.sum('quantity');
    group.query(querySale);
    return Kinvey.DataStore.group('Sales', group, {
      success: function(result) {
        if (result.length > 0) {
          return $('#soldProductsQuantity').html(result[0].result);
        } else {
          return $('#soldProductsQuantity').html(0);
        }
      }
    });
  };

  return ReportSale;

})();

ReportCustomer = (function() {
  function ReportCustomer(reportCustomerList) {
    this.reportCustomerList = reportCustomerList;
    this.getNewCustomersAtLastWeek();
    this.getTotalCustomers();
    this.getTotalCustomersHowBought();
  }

  ReportCustomer.prototype.getNewCustomersAtLastWeek = function() {
    var group, queryCustomer, weekLater;
    weekLater = moment().subtract('days', 7);
    queryCustomer = new Kinvey.Query;
    queryCustomer.greaterThanOrEqualTo('registerAt', weekLater.format("YYYY-MM-DDTHH:mm:ss.SSSZ"));
    group = Kinvey.Group.count('_id');
    return Kinvey.DataStore.group('Customers', group, {
      success: function(response) {
        var result, total, _i, _len;
        total = 0;
        if (response.length > 0) {
          for (_i = 0, _len = response.length; _i < _len; _i++) {
            result = response[_i];
            total += result.result;
          }
        }
        return $('#newCustomersAtLastWeek').html(total);
      }
    });
  };

  ReportCustomer.prototype.getTotalCustomers = function() {
    var group;
    group = Kinvey.Group.count('_id');
    return Kinvey.DataStore.group('Customers', group, {
      success: function(response) {
        var result, total, _i, _len;
        total = 0;
        if (response.length > 0) {
          for (_i = 0, _len = response.length; _i < _len; _i++) {
            result = response[_i];
            total += result.result;
          }
        }
        return $('#totalCustomers').html(total);
      }
    });
  };

  ReportCustomer.prototype.getTotalCustomersHowBought = function() {
    var group;
    group = Kinvey.Group.count('customer._id');
    return Kinvey.DataStore.group('Sales', group, {
      success: function(response) {
        var result, total, _i, _len;
        total = 0;
        if (response.length > 0) {
          for (_i = 0, _len = response.length; _i < _len; _i++) {
            result = response[_i];
            total += result.result;
          }
        }
        return $('.client-quantity').html(total);
      }
    });
  };

  return ReportCustomer;

})();

ReportProduct = (function() {
  function ReportProduct() {}

  return ReportProduct;

})();
