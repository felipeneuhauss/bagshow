// Generated by CoffeeScript 1.6.3
(function() {
  var BagPortfolioController,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  BagPortfolioController = (function(_super) {
    __extends(BagPortfolioController, _super);

    function BagPortfolioController($scope) {
      this.setScope($scope);
      this.loadScopeData();
      this.startEvents();
    }

    BagPortfolioController.prototype.loadScopeData = function() {
      var query, _this;
      _this = this;
      _this.scope.bagList = [];
      query = new Kinvey.Query();
      query.equalTo('inactivedAt', null);
      return Kinvey.DataStore.find('Bags', query, {
        relations: {
          customer: 'Customers'
        },
        success: function(list) {
          return _this.scope.$apply(function() {
            var $container, $filter, bag, _i, _len, _ref;
            _this.scope.bagList = list;
            _ref = _this.scope.bagList;
            for (_i = 0, _len = _ref.length; _i < _len; _i++) {
              bag = _ref[_i];
              $('.portfolio-box').append(underscore.template($("#portfolio-div").html(), {
                bag: bag
              }));
            }
            $container = $(".portfolio-box");
            $filter = $(".portfolio-filters");
            $container.isotope({
              filter: "*",
              layoutMode: "sloppyMasonry",
              animationOptions: {
                duration: 400
              }
            });
            $filter.find("a").click(function() {
              var selector;
              selector = $(this).attr("data-filter");
              $filter.find("a").removeClass("active");
              $(this).addClass("active");
              $container.isotope({
                filter: selector,
                animationOptions: {
                  animationDuration: 400,
                  queue: false
                }
              });
              return false;
            });
            $("a[class^='prettyPhoto']").prettyPhoto({
              social_tools: false,
              deeplinking: false
            });
            return $('.parallax-area').parallax("50%", 0.4);
          });
        }
      });
    };

    return BagPortfolioController;

  })(AngularView);

  angularApp.controller('BagPortfolioController', BagPortfolioController);

}).call(this);
